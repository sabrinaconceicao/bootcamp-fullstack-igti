{"ast":null,"code":"function calculateInterest(initValue, interest, period) {\n  let array = [];\n  let newValue = initValue;\n  let newValueWithInterest = newValue * (1 + interest / 100.0) - newValue;\n  let newAccumulatedMonthly = newValueWithInterest / newValue * 100.0;\n  let counter = 1;\n\n  for (let index = 1; index <= period; index++) {\n    const valueWithInterest = initValue * Math.pow(1 + interest / 100.0, index);\n    newValueWithInterest = (valueWithInterest - initValue).toFixed(2);\n    newAccumulatedMonthly = newValueWithInterest / initValue;\n    const value = {\n      counter,\n      valueWithInterest,\n      newValueWithInterest,\n      newAccumulatedMonthly: (newAccumulatedMonthly * 100).toFixed(2)\n    };\n    array.push(value);\n    counter++;\n  }\n\n  return array;\n}\n\nexport { calculateInterest };","map":{"version":3,"sources":["C:/Users/sabrina da conceição/Desktop/Bootcamp-IGTI/Modulo03/DESAFIO_FINAL/src/helpers/calculateInterest.js"],"names":["calculateInterest","initValue","interest","period","array","newValue","newValueWithInterest","newAccumulatedMonthly","counter","index","valueWithInterest","Math","pow","toFixed","value","push"],"mappings":"AAAA,SAASA,iBAAT,CAA2BC,SAA3B,EAAsCC,QAAtC,EAAgDC,MAAhD,EAAwD;AACtD,MAAIC,KAAK,GAAG,EAAZ;AAEA,MAAIC,QAAQ,GAAGJ,SAAf;AACA,MAAIK,oBAAoB,GAAGD,QAAQ,IAAI,IAAIH,QAAQ,GAAG,KAAnB,CAAR,GAAoCG,QAA/D;AAEA,MAAIE,qBAAqB,GAAID,oBAAoB,GAAGD,QAAxB,GAAoC,KAAhE;AAEA,MAAIG,OAAO,GAAG,CAAd;;AAEA,OAAK,IAAIC,KAAK,GAAG,CAAjB,EAAoBA,KAAK,IAAIN,MAA7B,EAAqCM,KAAK,EAA1C,EAA8C;AAC5C,UAAMC,iBAAiB,GAAGT,SAAS,GAAGU,IAAI,CAACC,GAAL,CAAS,IAAIV,QAAQ,GAAG,KAAxB,EAA+BO,KAA/B,CAAtC;AAEAH,IAAAA,oBAAoB,GAAG,CAACI,iBAAiB,GAAGT,SAArB,EAAgCY,OAAhC,CAAwC,CAAxC,CAAvB;AACAN,IAAAA,qBAAqB,GAAGD,oBAAoB,GAAGL,SAA/C;AAEA,UAAMa,KAAK,GAAG;AACZN,MAAAA,OADY;AAEZE,MAAAA,iBAFY;AAGZJ,MAAAA,oBAHY;AAIZC,MAAAA,qBAAqB,EAAE,CAACA,qBAAqB,GAAG,GAAzB,EAA8BM,OAA9B,CAAsC,CAAtC;AAJX,KAAd;AAOAT,IAAAA,KAAK,CAACW,IAAN,CAAWD,KAAX;AACAN,IAAAA,OAAO;AACR;;AAED,SAAOJ,KAAP;AACD;;AAED,SAASJ,iBAAT","sourcesContent":["function calculateInterest(initValue, interest, period) {\r\n  let array = [];\r\n\r\n  let newValue = initValue;\r\n  let newValueWithInterest = newValue * (1 + interest / 100.0) - newValue;\r\n\r\n  let newAccumulatedMonthly = (newValueWithInterest / newValue) * 100.0;\r\n\r\n  let counter = 1;\r\n\r\n  for (let index = 1; index <= period; index++) {\r\n    const valueWithInterest = initValue * Math.pow(1 + interest / 100.0, index);\r\n\r\n    newValueWithInterest = (valueWithInterest - initValue).toFixed(2);\r\n    newAccumulatedMonthly = newValueWithInterest / initValue;\r\n\r\n    const value = {\r\n      counter,\r\n      valueWithInterest,\r\n      newValueWithInterest,\r\n      newAccumulatedMonthly: (newAccumulatedMonthly * 100).toFixed(2),\r\n    };\r\n\r\n    array.push(value);\r\n    counter++;\r\n  }\r\n\r\n  return array;\r\n}\r\n\r\nexport { calculateInterest };\r\n"]},"metadata":{},"sourceType":"module"}